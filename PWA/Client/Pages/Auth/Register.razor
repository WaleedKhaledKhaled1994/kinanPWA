@page "/register"

@inject IAccounts accountsRepository
@inject NavigationManager navigationManager
@inject ILoginService loginService


<div class="login-wrapper d-flex align-items-center justify-content-center text-center">
    <!-- Background Shape-->
    <div class="background-shape"></div>
    <div class="container">
        <img class="big-logo" src="img/core-img/logo-white.png" alt="">
        <!-- Register Form-->
        <div class="register-form mt-5 px-4">
            <EditForm Model="userRegister" OnValidSubmit="CreateUser">
                <DataAnnotationsValidator />
                <div class="form-group text-left mb-4">
                    <span>Email</span>
                    <label><i class="lni-envelope"></i></label>
                    <InputText class="form-control" id="email" type="email" placeholder="user@company.com" @bind-Value="@userRegister.Email" />
                    <ValidationMessage For="@(() => userRegister.Email)" />
                </div>
                <div class="form-group text-left mb-4">
                    <span>Phone</span>
                    <label><i class="lni-user"></i></label>
                    <InputText class="form-control" id="phoneNumber" type="text" placeholder="0941425818" @bind-Value="@userRegister.PhoneNumber" />
                    <ValidationMessage For="@(() => userRegister.PhoneNumber)" />
                </div>
                <div class="form-group text-left mb-4">
                    <span>Password</span>
                    <label><i class="lni-lock"></i></label>
                    <InputPassword class="form-control" id="registerPassword" type="password" @bind-Value="@userRegister.Password" />
                    <ValidationMessage For="@(() => userRegister.Password)" />
                </div>
                <div class="form-group text-left mb-4">
                    <span>Confirm Password</span>
                    <label><i class="lni-lock"></i></label>
                    <InputPassword class="form-control" id="registerConfirmPassword" type="password" @bind-Value="@userRegister.ConfirmPassword" />
                    <ValidationMessage For="@(() => userRegister.ConfirmPassword)" />
                </div>

                <button class="btn btn-success btn-lg w-100">Register Now</button>

            </EditForm>
            @if (!string.IsNullOrEmpty(error))
            {
                <div class="alert alert-danger mt-3 mb-0">@error</div>
            }
        </div>
        <!-- Login Meta-->
        <div class="login-meta-data">
            <p class="text-white mt-3 mb-0">Already have an account?<a class="ml-2" href="login">Login</a></p>
        </div>
    </div>
</div>

@code{
    private UserRegister userRegister = new UserRegister();
    private string error;

    private async Task CreateUser()
    {
        try
        {
            var userToken = await accountsRepository.Register(userRegister);
            await loginService.Login(userToken);
            navigationManager.NavigateTo("");
        }
        catch (Exception ex)
        {
            error = ex.Message;
            StateHasChanged();
        }
    }
}
